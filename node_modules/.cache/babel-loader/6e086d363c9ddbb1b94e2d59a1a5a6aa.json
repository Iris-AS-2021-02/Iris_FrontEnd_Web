{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/GitHub/Iris_FrontEnd_Web/src/index.js\";\nimport React from 'react';\nimport './index.css';\nimport App from './App';\nimport { render } from \"react-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, createHttpLink, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'http://ec2-3-91-161-227.compute-1.amazonaws.com:5000/graphql',\n  cache: new InMemoryCache()\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem('token');\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nconst rootElement = document.getElementById(\"root\");\nrender( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this), rootElement); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/kevin/Documents/GitHub/Iris_FrontEnd_Web/src/index.js"],"names":["React","App","render","reportWebVitals","ApolloClient","createHttpLink","InMemoryCache","ApolloProvider","setContext","BrowserRouter","ReactDOM","httpLink","uri","cache","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,aAAtC,EAAqDC,cAArD,QAA0E,gBAA1E;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,aAAT,QAA6B,kBAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,QAAQ,GAAGN,cAAc,CAAC;AAC9BO,EAAAA,GAAG,EAAC,8DAD0B;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAD,CAA/B;AAIA,MAAMQ,QAAQ,GAAGN,UAAU,CAAC,CAACO,CAAD,WAAoB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC9BS,EAAAA,KAAK,EAAC,IAAIP,aAAJ,EADwB;AAE9BgB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBZ,QAAhB;AAFwB,CAAjB,CAAf;AAKA,MAAMa,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAxB,MAAM,eACJ,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEmB,MAAxB;AAAA,yBACE,QAAC,aAAD;AAAA,2BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADI,EAMJG,WANI,CAAN,C,CASA;AACA;AACA;;AACArB,eAAe","sourcesContent":["import React from 'react';\nimport './index.css';\nimport App from './App';\nimport { render } from \"react-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport {ApolloClient, createHttpLink, InMemoryCache, ApolloProvider} from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter} from \"react-router-dom\"\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst httpLink = createHttpLink({\n  uri:'http://ec2-3-91-161-227.compute-1.amazonaws.com:5000/graphql',\n  cache: new InMemoryCache()\n});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  cache:new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  rootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}