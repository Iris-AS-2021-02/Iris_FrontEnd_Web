{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/GitHub/Iris_FrontEnd_Web/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    navigation\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordIncorret, setPasswordIncorret] = useState(false);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(gql`\n  query {\n    usersByNumber(number : \"${username}\") {\n      Name\n      Number\n    } \n  },\n  `);\n\n  const isVerifiedUser = () => {\n    var _data$usersByNumber;\n\n    return (data === null || data === void 0 ? void 0 : (_data$usersByNumber = data.usersByNumber) === null || _data$usersByNumber === void 0 ? void 0 : _data$usersByNumber.Name) === password;\n  };\n\n  const login = async () => {\n    console.log(\"username\", username, \"password\", password, data);\n    const result = await isVerifiedUser();\n\n    if (isVerifiedUser()) {\n      setPasswordIncorret(false);\n      window.location.replace('./');\n    } else {\n      setPasswordIncorret(true);\n    }\n  };\n\n  const goToSignUp = () => {\n    console.log(username);\n    console.log(password);\n    setPasswordIncorret(false);\n    navigation.navigate('SignUp');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center\",\n      style: {\n        width: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"tittle\",\n          children: \"Entra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: \"Iris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ingresa tu numero de telefono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: \"Numero de Telefono\",\n            onChange: e => setUsername(e.target.value),\n            \"aria-label\": \"Numero telefonico\",\n            \"aria-describedby\": \"basic-addon1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ingresa tu nombre de usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: \"Nombre De Usuario\",\n            onChange: e => setPassword(e.target.value),\n            \"aria-label\": \"Nombre De Usuario\",\n            \"aria-describedby\": \"basic-addon1\",\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), passwordIncorret && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"password or username incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: login,\n          children: \"Entra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"rVOqS90pe6mSzXNS7XPJyu0hupQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/kevin/Documents/GitHub/Iris_FrontEnd_Web/src/components/Login.js"],"names":["useState","React","graphql","gql","useQuery","Login","navigation","username","setUsername","password","setPassword","passwordIncorret","setPasswordIncorret","loading","error","data","isVerifiedUser","usersByNumber","Name","login","console","log","result","window","location","replace","goToSignUp","navigate","width","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport React from 'react';\nimport { graphql } from '@apollo/react-hoc';\nimport { gql, useQuery } from '@apollo/client';\n\nfunction Login ({ navigation }){\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordIncorret, setPasswordIncorret] = useState(false);\n\n  const { loading, error, data } = useQuery(gql`\n  query {\n    usersByNumber(number : \"${username}\") {\n      Name\n      Number\n    } \n  },\n  `);\n\n\n  const isVerifiedUser = () => {\n    return data?.usersByNumber?.Name === password;\n  }\n\n  const login =async () => {\n     console.log(\"username\",username,\"password\", password, data)\n     const result = await isVerifiedUser();\n     \n    if (isVerifiedUser()) {\n      setPasswordIncorret(false);\n      window.location.replace('./');\n    } else {\n      setPasswordIncorret(true);\n    }\n  }\n  const goToSignUp = () => {\n    console.log(username);\n    console.log(password);\n    setPasswordIncorret(false);\n    navigation.navigate('SignUp');\n\n  }\n  return (\n    <div className=\"container\">\n       <Card className=\"text-center\" style={{ width: '18rem' }}>\n     <Card.Body className=\"card-body\">\n     <Card.Title className=\"tittle\">Entra</Card.Title>\n     <Card.Subtitle className=\"mb-2 text-muted\">Iris</Card.Subtitle>\n     <label>Ingresa tu numero de telefono</label>\n       <InputGroup className=\"mb-3\">\n        \n        \n                        <FormControl\n                            placeholder=\"Numero de Telefono\"\n                            onChange={e=> setUsername(e.target.value)}\n                            aria-label=\"Numero telefonico\"\n                            aria-describedby=\"basic-addon1\"\n                        />\n        </InputGroup>\n        <label>Ingresa tu nombre de usuario</label>\n        <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Nombre De Usuario\"\n                            onChange={e=> setPassword(e.target.value)}\n                            aria-label=\"Nombre De Usuario\"\n                            aria-describedby=\"basic-addon1\"\n                            value={password}\n                        />\n                        {(passwordIncorret && <p>\n        password or username incorrect\n      </p>)}\n        </InputGroup>\n        \n        <Button  onClick={login}>Entra</Button>\n     </Card.Body>\n     </Card>\n    </div>\n  );\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}